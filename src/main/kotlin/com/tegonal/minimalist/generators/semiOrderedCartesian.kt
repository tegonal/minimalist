@file:JvmName("SemiOrderedCartesianKt")
@file:JvmMultifileClass

package com.tegonal.minimalist.generators

import com.tegonal.minimalist.generators.impl.SemiOrderedCartesianProductArgsGenerator

/**
 * Combines `this` [SemiOrderedArgsGenerator] with the given [other]&nbsp;[SemiOrderedArgsGenerator] resulting in their
 * cross product where the values are [transform]ed into values of type [R].
 *
 * The resulting [SemiOrderedArgsGenerator] generates
 * [this.size][SemiOrderedArgsGenerator.size] * [other.size][SemiOrderedArgsGenerator.size] values before repeating.
 *
 * @param other The other [OrderedArgsGenerator] which generates values of type [A2].
 * @param A1 The type of values generated by `this` [OrderedArgsGenerator].
 * @param A2 the type of values generated by the [other]&nbsp;[OrderedArgsGenerator].
 * @param R the type of values generated by the resulting [OrderedArgsGenerator].
 *
 * @return The resulting [OrderedArgsGenerator] which represents the cross product and generates values of type [R].
 *
 * @since 2.0.0
 */
fun <A1, A2, R> SemiOrderedArgsGenerator<A1>.cartesian(
	other: SemiOrderedArgsGenerator<A2>,
	transform: (A1, A2) -> R
): SemiOrderedArgsGenerator<R> = SemiOrderedCartesianProductArgsGenerator(this, other, transform)
