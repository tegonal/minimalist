package com.tegonal.minimalist.generators

import com.tegonal.minimalist.generators.impl.OrderedArgsGeneratorCombiner

/**
 * Combines `this` [OrderedArgsGenerator] with the given [other] [OrderedArgsGenerator] and [transform]s the generated
 * values pairwise, returning a [OrderedArgsGenerator] which generates values of type [R].
 *
 * The resulting [OrderedArgsGenerator] generates
 * [this.size][OrderedArgsGenerator.size] * [other.size][OrderedArgsGenerator.size] values before repeating.
 *
 * @param other The other [OrderedArgsGenerator] which generates values of type [A2].
 * @param A1 The type of values generated by `this` [OrderedArgsGenerator].
 * @param A2 the type of values generated by the [other] [OrderedArgsGenerator].
 * @param R the type of values generated by the resulting [OrderedArgsGenerator].
 *
 * @return The resulting [OrderedArgsGenerator] which generates values of type [R].
 *
 * @since 2.0.0
 */
fun <A1, A2, R> OrderedArgsGenerator<A1>.combine(
	other: OrderedArgsGenerator<A2>,
	transform: (A1, A2) -> R
): OrderedArgsGenerator<R> = OrderedArgsGeneratorCombiner(this, other, transform)
