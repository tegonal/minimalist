package com.tegonal.minimalist.generators

import com.tegonal.minimalist.config._components
import com.tegonal.minimalist.generators.impl.IntFromUntilArbArgsGenerator

/**
 * Turns `this` [OrderedArgsGenerator] into a [ArbArgsGenerator].
 *
 * @param T The type of values generated by `this` [OrderedArgsGenerator].
 *
 * @return The resulting [ArbArgsGenerator].
 *
 * @since 2.0.0
 */
fun <T> OrderedArgsGenerator<T>.toRandomArgsGenerator(): ArbArgsGenerator<T> =
	IntFromUntilArbArgsGenerator(
		_components,
		seedBaseOffset = 0,
		from = 0,
		toExclusive = size
	).map { offset -> generate(offset).first() }


/**
 * Generates [size][OrderedArgsGenerator.size] values and puts them into a [List].
 *
 * @return A [List] of all values `this` [OrderedArgsGenerator] generates.
 *
 * @since 2.0.0
 */
fun <T> OrderedArgsGenerator<T>.toList(): List<T> =
	generate().take(size).toList()

/**
 * Generates [size][OrderedArgsGenerator.size] values and puts them into a [Set].
 *
 * @return A [Set] of all values `this` [OrderedArgsGenerator] generates.
 *
 * @since 2.0.0
 */
fun <T> OrderedArgsGenerator<T>.toSet(): Set<T> =
	generate().take(size).toSet()

